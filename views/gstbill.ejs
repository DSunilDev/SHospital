<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="style.css">
    <link rel="icon" type="/images/favicon.icon" href="favicon/billicon.ico">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz" crossorigin="anonymous"></script>
    <title>GST Bill</title>

    <style>
        body {
            font-family: 'Arial', sans-serif;
            margin: 20px;
        }

        .form-container {
            float: left;
            width: 60%;
            margin-bottom: 20px; /* Add margin at the bottom */
        }

        .cart-container {
            float: right;
            width: 35%;
            margin-left: 5%;
            padding: 15px;
            border: 1px solid #ddd;
        }

        label {
            display: block;
            margin-bottom: 8px;
            font-weight: bold;
        }

        input, select {
            width: 40%;
            padding: 8px;
            margin-bottom: 12px;
            box-sizing: border-box;
        }

        button {
            padding: 12px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            width: 100%;
            display: inline-block;
            margin-bottom: 10px; /* Add margin to separate buttons */
        }

        button:hover {
            background-color: #45a049;
        }

        .cart-item {
            margin-bottom: 10px;
            position: relative; /* Make it relative to allow absolute positioning of the button */
        }

        .remove-button {
            background-color: #ff6347; /* Tomato color */
            color: white;
            border: none;
            padding: 5px 8px;
            cursor: pointer;
            border-radius: 3px;
            font-size: 12px; /* Larger font size */
        }

        /* Clear floats */
        .clearfix::after {
            content: "";
            clear: both;
            display: table;
        }

        /* Add styles for the footer */
        footer {
            margin-top: 20px;
            padding: 10px;
            text-align: center;
            background-color: #f1f1f1;
            clear: both; /* Clear the floats */
        }

        /* Style for bold and larger subtotal */
        #subtotal {
            font-weight: bold;
            font-size: 18px;
        }

        /* Style for the bill number */
        #billNumber {
            font-weight: bold;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <!-- Your Navbar -->
    <%- include('navbar') %>
    <center><h2><b><i>GST Billing</i></b></h2></center>
    <br>
   
    <div class="form-container">
        <form>
            <center><h2>Patient Information</h2></center>

            <!-- Patient Information Form -->
            <label for="patientName">Patient Name:</label>
            <input type="text" id="patientName" name="patientName" oninput="updateCartPatientName()" required>
            <br><br>
            <label for="billingDate">Billing Date:</label>
            <input type="date" id="billingDate" name="billingDate" oninput="updateCartDate()" required>
            <br><br>
            <!-- Product Details -->
            <center><h2>Product Details</h2></center>

            <label for="productName">Product Name:</label>
            <input type="text" id="productName" name="productName" required>
            <br><br>
            <label for="quantity">Quantity:</label>
            <input type="number" id="quantity" name="quantity" min="1" oninput="calculateSubtotal()" required>
            <br><br>
            <label for="amount">Amount (per unit):</label>
            <input type="number" id="amount" name="amount" min="0" required>
            <br><br>
            <label for="gstPercentage">GST Percentage:</label>
            <select id="gstPercentage" name="gstPercentage" onchange="calculateSubtotal()" required>
                <option value="12">12%</option>
                <option value="6">6%</option>
                <option value="other">Other</option>
            </select>
            <br><br>
            <label for="batchNumber">Batch Number:</label>
            <input type="text" id="batchNumber" name="batchNumber" required>
            <br><br>
            <label for="expiryDate">Expiry Date (MM/YYYY):</label>
            <input type="month" id="expiryDate" name="expiryDate">
            <br><br>
            <!-- Add to Cart Button -->
            <button type="button" onclick="addToCart()">Add to Invoice</button>
            <br><br><br>
        </form>
    </div>

    <!-- Cart Container -->
    <div class="cart-container">
        <h2>Invoice Cart</h2>
        <div id="billNumber"></div> <!-- Display Bill Number -->
        <div id="cartItems">Add product to begin</div>
        <div id="subtotal">Subtotal: ₹0.00</div>
        <br>
        <!-- Generate Invoice Button -->
        <button type="button" onclick="generateInvoice()">Generate Invoice</button>
    </div>

    <script>
        // Load the current bill counter from localStorage or initialize it to 1
        let billCounter = parseInt(localStorage.getItem('billCounter')) || 1;
    
        function initialize() {
            // Call initialize function to set the initial bill number
            updateBillNumber();
        }
    
        // Call the initialize function when the page loads
        window.onload = initialize;
    
        function addToCart() {
            // Get values from form inputs
            const productName = document.getElementById('productName').value;
            const quantity = parseFloat(document.getElementById('quantity').value);
            const amount = parseFloat(document.getElementById('amount').value);
            const gstPercentageElement = document.getElementById('gstPercentage');
            const gstPercentage = gstPercentageElement.value === 'other' ? parseFloat(prompt('Enter GST Percentage')) : parseFloat(gstPercentageElement.value);
            const batchNumber = document.getElementById('batchNumber').value;
            const expiryDate = document.getElementById('expiryDate').value || 'N/A'; // Default to 'N/A' if not provided
    
            // Check if any of the required fields are empty
            if (!productName || isNaN(quantity) || isNaN(amount) || isNaN(gstPercentage) || !batchNumber) {
                alert('Add a product');
                return;
            }
    
            // Increment the bill counter and update the bill number
            billCounter++;
            updateBillNumber();
    
            // Calculate CGST and SGST
            const cgst = gstPercentage / 2;
            const sgst = gstPercentage / 2;
    
            // Calculate total amount including CGST and SGST
            const totalAmount = calculateTotalAmount(amount, quantity, cgst, sgst);
    
            // Create a new cart item
            const cartItem = document.createElement('div');
            cartItem.classList.add('cart-item');
            cartItem.innerHTML = `<strong>${productName}</strong> - Quantity: ${quantity}, Batch: ${batchNumber}, Expiry: ${expiryDate}, Amount: ₹${amount.toFixed(2)}, CGST: ${cgst}%, SGST: ${sgst}%, Total: ₹${totalAmount.toFixed(2)}`;
    
            // Add Remove button
            const removeButton = document.createElement('button');
            removeButton.classList.add('remove-button');
            removeButton.innerText = 'Remove';
            removeButton.onclick = function () {
                cartItem.remove();
                updateSubtotal();
            };
    
            // Append the remove button to the cart item
            cartItem.appendChild(removeButton);
    
            // Append the cart item to the cart container
            document.getElementById('cartItems').appendChild(cartItem);
    
            // Clear the form fields
            document.getElementById('productName').value = '';
            document.getElementById('quantity').value = '';
            document.getElementById('amount').value = '';
            document.getElementById('gstPercentage').value = '12'; // Set default GST percentage to 12
            document.getElementById('batchNumber').value = '';
            document.getElementById('expiryDate').value = '';
    
            // Update the subtotal
            updateSubtotal();
        }
    
        function calculateTotalAmount(amount, quantity, cgst, sgst) {
            // Calculate total amount including CGST and SGST
            const totalAmount = (amount * quantity) + ((amount * cgst * quantity) / 100) + ((amount * sgst * quantity) / 100);
            return totalAmount;
        }
    
        function calculateSubtotal() {
            // Get quantity, amount, and GST, calculate subtotal
            const quantity = parseFloat(document.getElementById('quantity').value);
            const amount = parseFloat(document.getElementById('amount').value);
            const gstPercentageElement = document.getElementById('gstPercentage');
            const gstPercentage = gstPercentageElement.value === 'other' ? parseFloat(prompt('Enter GST Percentage')) : parseFloat(gstPercentageElement.value);
    
            // Calculate CGST and SGST
            const cgst = gstPercentage / 2;
            const sgst = gstPercentage / 2;
    
            // Calculate subtotal
            const subtotal = calculateTotalAmount(amount, quantity, cgst, sgst);
    
            // Display subtotal
            document.getElementById('subtotal').innerText = `Subtotal: ₹${subtotal.toFixed(2)}`;
        }
    
        function updateSubtotal() {
            // Update subtotal when a new item is added to the cart
            const cartItems = document.getElementsByClassName('cart-item');
            let totalSubtotal = 0;
    
            for (let i = 0; i < cartItems.length; i++) {
                const itemText = cartItems[i].innerText;
                const totalMatch = itemText.match(/Total: ₹([\d.]+)/);
    
                if (totalMatch) {
                    totalSubtotal += parseFloat(totalMatch[1]);
                }
            }
    
            // Display the updated subtotal
            document.getElementById('subtotal').innerText = `Subtotal: ₹${totalSubtotal.toFixed(2)}`;
        }
    
        function updateCartPatientName() {
            // Update patient name in the cart as soon as it is entered
            const patientName = document.getElementById('patientName').value;
            document.getElementById('cartItems').innerHTML = `<strong>Patient:</strong> ${patientName}`;
        }
    
        function updateCartDate() {
            // Update billing date in the cart as soon as it is entered
            const billingDate = document.getElementById('billingDate').value;
            document.getElementById('cartItems').innerHTML += ` - <strong>Billing Date:</strong> ${formatDate(billingDate)}`;
        }
    
        function generateInvoice() {
            // Increment the bill counter and update the bill number
            billCounter++;
            updateBillNumber();
    
            // Implement your logic for generating the final invoice here
            alert('Invoice generated successfully!');
        }
    
        function formatDate(dateString) {
            const options = { year: 'numeric', month: '2-digit', day: '2-digit' };
            const formattedDate = new Date(dateString).toLocaleDateString('en-IN', options);
            return formattedDate;
        }
    
        function updateBillNumber() {
            // Display the updated bill number
            document.getElementById('billNumber').innerText = `Bill Number: BILL-${billCounter.toString().padStart(2, '0')}`;
    
            // Store the current bill counter in localStorage
            localStorage.setItem('billCounter', billCounter.toString());
        }
    </script>
    

    <!-- Footer -->
    <footer>
        <p>&copy; 2024 Saravana Hospital. All rights reserved.</p>
    </footer>
</body>
</html>

<script>
    function generateInvoice() {
        // Increment the bill counter and update the bill number
        billCounter++;
        updateBillNumber();

        // Get patient information
        const patientName = document.getElementById('patientName').value;
        const billingDate = document.getElementById('billingDate').value;

        // Format the billing date as MM-yyyy
        const formattedBillingDate = formatDate(billingDate, 'MM-yyyy');

        // Get cart information
        const cartItems = document.getElementsByClassName('cart-item');
        const itemsArray = [];

        for (let i = 0; i < cartItems.length; i++) {
            const itemText = cartItems[i].innerText;
            const itemWithoutRemoveButton = itemText.replace(/Remove/, ''); // Remove "Remove" button text
            const itemWithoutLabels = itemWithoutRemoveButton.replace(/Quantity:|Batch:|Expiry:|Amount:|CGST:|SGST:|Total:/g, ''); // Remove specific labels
            itemsArray.push(itemWithoutLabels);
        }

        // Create a printable document
        const printDocument = document.createElement('div');
        printDocument.innerHTML = `
            <html lang="en">
            <head>
                <meta charset="UTF-8">
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <title>Saravana Hospital Invoice</title>
                <style>
                    body {
                        font-family: 'Arial', sans-serif;
                        margin: 20px;
                    }

                    .invoice-header {
                        text-align: center;
                        margin-bottom: 20px;
                    }

                    .logo {
                        max-width: 100px; /* Adjust the width as needed */
                        margin-right: 20px;
                    }

                    .invoice-details {
                        margin-bottom: 20px;
                    }

                    .invoice-items {
                        width: 100%;
                        border-collapse: collapse;
                        margin-bottom: 20px;
                    }

                    .invoice-items, .invoice-items th, .invoice-items td {
                        border: 1px solid #ddd;
                    }

                    .invoice-items th, .invoice-items td {
                        padding: 8px;
                        text-align: left;
                    }

                    .invoice-total {
                        font-weight: bold;
                    }
                </style>
            </head>
            <body>
                <div class="invoice-header">
                    <img class="logo" src="imgs/gsticon.png" alt="Logo"> <!-- Add your logo path here -->
                    <h2>Saravana Hospital Invoice</h2>
                </div>
                <div class="invoice-details">
                    <p><strong>Patient:</strong> ${patientName}</p>
                    <p><strong>Billing Date:</strong> ${formattedBillingDate}</p>
                    <p><strong>Bill Number:</strong> BILL-${billCounter.toString().padStart(2, '0')}</p>
                </div>
                <table class="invoice-items">
                    <thead>
                        <tr>
                            <th>Product , Quantity</th>
                            <th>Batch</th>
                            <th>Expiry</th>
                            <th>Amount</th>
                            <th>CGST</th>
                            <th>SGST</th>
                            <th>Price</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${itemsArray.map(item => {
                            const [product, quantity, batch, expiry, amount, cgst, sgst] = item.split(',');
                            return `
                                <tr>
                                    <td>${product}</td>
                                    <td>${quantity}</td>
                                    <td>${batch}</td>
                                    <td>${expiry}</td>
                                    <td>${amount}</td>
                                    <td>${cgst}</td>
                                    <td>${sgst}</td>
                                </tr>`;
                        }).join('')}
                    </tbody>
                </table>
                <div class="invoice-total">
                    <p><strong>Subtotal:</strong> ₹${document.getElementById('subtotal').innerText.split('₹')[1]}</p>
                </div>
                <footer>
                    <p>&copy; 2024 Saravana Hospital. All rights reserved.</p>
                </footer>
            </body>
            </html>
        `;

        // Open the print window
        const printWindow = window.open('', '_blank');
        printWindow.document.write(printDocument.innerHTML);
        printWindow.document.close(); // Close the document stream to enable printing
        printWindow.print();
    }
</script>

